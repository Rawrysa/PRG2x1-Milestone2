<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>